#定义用户信息
#格式：用户名=密码：角色1，角色2
##[users]
##zhangsan=123,admin
##lisi=456,seller
##wangwu=789,clerk
#----------------------------------------------------------------
#角色及其权限信息
#预定权限:user:query
#        user:detail:query
#        user:update
#        user:delete
#        user:insert
#        order:update
#        .......
#[roles]
#admin 拥有所有权,用*表示
#admin=*
#clerk 只有查询权限
#clerk:user:query,user:detailquery
#manager 有user的所有权限
#manager=user:*

[main]
#没有身份认证时,跳转地址
shiro.loginUrl=/user/login
#角色或权限校验不通过时,跳转地址
shiro.unauthorizedUrl=/user/perm/error
#登出跳转地址,回首页
shiro.redirectUrl=/

#声明密码比对器
credentialsMatcher =org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName=sha-256
credentialsMatcher.hashIterations=10000
#true=hex格式false=base64格式
credentialsMatcher.storedCredentialsHexEncoded=false

#声明自己定义的realm
realm04= com.zmq.realm.MyRealm
#将自己的定义的realm注册给核心控制者:SecurityManager
securityManager.realms=$realm04
#将比对器关联给realm, 则realm中对用户做身份认证时，可以使用加密比对器，对密文做比对
realm04.credentialsMatcher=$credentialsMatcher



[urls]
/user/all=authc,perms["user:query2"]
/user/logout=logout
#/user/login/page=anon
#/user/login/logic=anon
#/user/query=authc
#/user/update=authc,roles["manager"，"seller"]
#/user/delete=authc,perms["user:update","user:delete"]
#/user/logout=logout
